import pipes, os, subprocess, tempfile
import numpy as np
import pysptk
from scipy.signal import lfilter

h1 = "-0.0000000000000000000000000 -0.0000607317851972766220570 -0.0002284821966895833611488 -0.0004564579867292195558548 -0.0006651764851994812488556 -0.0007465329254046082496643 -0.0005713637801818549633026 0.0000000000000000000000000 0.0011050010798498988151550 0.0028650332242250442504883 0.0053717903792858123779297 0.0086750388145446777343750 0.0127730406820774078369141 0.0176066905260086059570312 0.0230580512434244155883789 0.0289536807686090469360352 0.0350727140903472900390625 0.0411592088639736175537109 0.0469378642737865447998047 0.0521319583058357238769531 0.0564821735024452209472656 0.0597646571695804595947266 0.0618068762123584747314453 0.0625000000000000000000000 0.0618068762123584747314453 0.0597646571695804595947266 0.0564821735024452209472656 0.0521319583058357238769531 0.0469378642737865447998047 0.0411592088639736175537109 0.0350727140903472900390625 0.0289536807686090469360352 0.0230580512434244155883789 0.0176066905260086059570312 0.0127730406820774078369141 0.0086750388145446777343750 0.0053717903792858123779297 0.0028650332242250442504883 0.0011050010798498988151550 0.0000000000000000000000000 -0.0005713637801818549633026 -0.0007465329254046082496643 -0.0006651764851994812488556 -0.0004564579867292195558548 -0.0002284821966895833611488 -0.0000607317851972766220570 -0.0000000000000000000000000"
h2 = "-0.0000000000000000000000000 -0.0000189894035429460927844 -0.0001649670302867889404297 -0.0005197309656068682670593 -0.0009119539754465222358704 -0.0007993865874595940113068 0.0005905415164306759834290 0.0038401838392019271850586 0.0087954495102167129516602 0.0141791049391031265258789 0.0176520366221666336059570 0.0164579972624778747558594 0.0085256835445761680603027 -0.0063578318804502487182617 -0.0258180331438779830932617 -0.0450394861400127410888672 -0.0579243414103984832763672 -0.0589948631823062896728516 -0.0454215072095394134521484 -0.0184191595762968063354492 0.0165918115526437759399414 0.0512527525424957275390625 0.0766330808401107788085938 0.0859375000000000000000000 0.0766330808401107788085938 0.0512527525424957275390625 0.0165918115526437759399414 -0.0184191595762968063354492 -0.0454215072095394134521484 -0.0589948631823062896728516 -0.0579243414103984832763672 -0.0450394861400127410888672 -0.0258180331438779830932617 -0.0063578318804502487182617 0.0085256835445761680603027 0.0164579972624778747558594 0.0176520366221666336059570 0.0141791049391031265258789 0.0087954495102167129516602 0.0038401838392019271850586 0.0005905415164306759834290 -0.0007993865874595940113068 -0.0009119539754465222358704 -0.0005197309656068682670593 -0.0001649670302867889404297 -0.0000189894035429460927844 -0.0000000000000000000000000"
h3 = "0.0000000000000000000000000 0.0001110405355575494468212 -0.0000562457425985485315323 -0.0009006917825900018215179 -0.0007893034489825367927551 0.0001498128112871199846268 -0.0013410935644060373306274 -0.0025659289676696062088013 0.0046229404397308826446533 0.0143918609246611595153809 0.0071540218777954578399658 -0.0148957977071404457092285 -0.0206078737974166870117188 -0.0026406140532344579696655 0.0023367730900645256042480 -0.0148247620090842247009277 0.0015939703444018959999084 0.0688190758228302001953125 0.0845167934894561767578125 -0.0354399941861629486083984 -0.1742693483829498291015625 -0.1255167126655578613281250 0.0968316346406936645507812 0.2265625000000000000000000 0.0968316346406936645507812 -0.1255167126655578613281250 -0.1742693483829498291015625 -0.0354399941861629486083984 0.0845167934894561767578125 0.0688190758228302001953125 0.0015939703444018959999084 -0.0148247620090842247009277 0.0023367730900645256042480 -0.0026406140532344579696655 -0.0206078737974166870117188 -0.0148957977071404457092285 0.0071540218777954578399658 0.0143918609246611595153809 0.0046229404397308826446533 -0.0025659289676696062088013 -0.0013410935644060373306274 0.0001498128112871199846268 -0.0007893034489825367927551 -0.0009006917825900018215179 -0.0000562457425985485315323 0.0001110405355575494468212 0.0000000000000000000000000"
h4 = "0.0000000000000000000000000 0.0000319407372444402426481 -0.0004334021941758692264557 0.0003043003671336919069290 0.0019160549854859709739685 -0.0027848551981151103973389 -0.0006065450143069028854370 0.0015906562330201268196106 0.0012794234789907932281494 0.0049644866958260536193848 -0.0160179361701011657714844 0.0035613151267170906066895 0.0256681013852357864379883 -0.0236878953874111175537109 -0.0063146199099719524383545 0.0056485831737518310546875 0.0099473400041460990905762 0.0380134843289852142333984 -0.0959445014595985412597656 0.0072263842448592185974121 0.1732778996229171752929688 -0.1638356000185012817382812 -0.0926965475082397460937500 0.2578125000000000000000000 -0.0926965475082397460937500 -0.1638356000185012817382812 0.1732778996229171752929688 0.0072263842448592185974121 -0.0959445014595985412597656 0.0380134843289852142333984 0.0099473400041460990905762 0.0056485831737518310546875 -0.0063146199099719524383545 -0.0236878953874111175537109 0.0256681013852357864379883 0.0035613151267170906066895 -0.0160179361701011657714844 0.0049644866958260536193848 0.0012794234789907932281494 0.0015906562330201268196106 -0.0006065450143069028854370 -0.0027848551981151103973389 0.0019160549854859709739685 0.0003043003671336919069290 -0.0004334021941758692264557 0.0000319407372444402426481 0.0000000000000000000000000"
h5 = "-0.0000000000000000000000000 0.0000639573045191355049610 -0.0004179632524028420448303 0.0010988787980750203132629 -0.0016440601320937275886536 0.0012205354869365692138672 0.0007454187725670635700226 -0.0038401838392019271850586 0.0064831515774130821228027 -0.0067139514721930027008057 0.0037187649868428707122803 0.0008085277513600885868073 -0.0025843342300504446029663 -0.0034861324820667505264282 0.0201802048832178115844727 -0.0450394861400127410888672 0.0695371702313423156738281 -0.0814322829246520996093750 0.0698144212365150451660156 -0.0307305082678794860839844 -0.0294100549072027206420898 0.0947175845503807067871094 -0.1451258510351181030273438 0.1640625000000000000000000 -0.1451258510351181030273438 0.0947175845503807067871094 -0.0294100549072027206420898 -0.0307305082678794860839844 0.0698144212365150451660156 -0.0814322829246520996093750 0.0695371702313423156738281 -0.0450394861400127410888672 0.0201802048832178115844727 -0.0034861324820667505264282 -0.0025843342300504446029663 0.0008085277513600885868073 0.0037187649868428707122803 -0.0067139514721930027008057 0.0064831515774130821228027 -0.0038401838392019271850586 0.0007454187725670635700226 0.0012205354869365692138672 -0.0016440601320937275886536 0.0010988787980750203132629 -0.0004179632524028420448303 0.0000639573045191355049610 -0.0000000000000000000000000"

h_filters = [np.fromstring(x, sep = ' ') for x in [h1,h2,h3,h4,h5]]

def wav2mgcf0(x, order=34, frame_window=512, zerofill_width=1024, shift_window=64, pass_const=0.4, min_pitch=20, max_pitch=500, mgcep_gamma=2):
    # Convert from int to float32, but keep numbers as integers
    x = x.astype('float32')

    # Compute pitch and voicing strength
    f0 = pysptk.rapt(x.astype(np.float32), 16000, shift_window, otype="pitch", min=min_pitch, max=max_pitch)

    voicing_str = np.empty((f0.shape[0], 5), dtype=np.float32)

    for i in range(5):
        h = h_filters[i]
        xf = lfilter(h, 1, x)
        voicing_str[:, i] = pysptk.rapt(xf.astype(np.float32), 16000, shift_window, otype="mixed", min=20, max=500)[:,3]

    # Compute MGC coefficients
    mgc_cmd = 'frame -l {} -p {} | window -l {} -L {} | mgcep -m {} -a {} -c {} -l {} -e 0.0012'.format(frame_window, shift_window, frame_window, zerofill_width, order, pass_const, mgcep_gamma, zerofill_width)

    p = subprocess.Popen(mgc_cmd, stdout=subprocess.PIPE, stdin=subprocess.PIPE, shell=True)
    stdout, stderr = p.communicate(x.tobytes())
    mgc = np.fromstring(stdout, dtype='float32').reshape((len(f0), order+1))

    try:
        idx = np.where( abs(voicing_str).sum(axis= 1) > 10)[0][0]
    except IndexError:
        idx = len(f0)

    return mgc[:idx], f0[:idx], voicing_str[:idx]

def mgcf02wav(mgc, f0, voicing_str, order=34, shift_window=64, pass_const=0.4, mgcep_gamma=2, gaussian=False):
    mgc = mgc.astype('float32')
    f0 = f0.astype('float32')

    with tempfile.NamedTemporaryFile() as f:
        mgc_fix_cmd = 'mgc2mgclsp -m {} -a {} -c {} -s 16000 | lspcheck -m {} -c -r 0.01 | mgclsp2mgc -m {} -a {} -c {}'.format(order, pass_const, mgcep_gamma, order, order, pass_const, mgcep_gamma)

        p = subprocess.Popen(mgc_fix_cmd, stdout=f, stdin=subprocess.PIPE, shell=True)
        mgc_fix, stderr = p.communicate(mgc.ravel().tobytes())
        f.file.flush()
        f.file.close()

        excitation = mixed_excitation(f0, voicing_str, shift_window).astype('float32')

        synthesis_cmd = 'mglsadf -m {} -a {} -c {} -p {} {}'.format(order, pass_const, mgcep_gamma, shift_window, f.name)
        p = subprocess.Popen(synthesis_cmd, stdout=subprocess.PIPE, stdin=subprocess.PIPE, shell=True)
        stdout, stderr = p.communicate(excitation.tobytes())
        y = np.fromstring(stdout, dtype='float32')

    return y

def mixed_excitation(f0, voicing_str, hopsize):
    exc_voiced = pysptk.excite(f0.astype(np.float64), hopsize=hopsize, noise=False)
    exc_unvoiced = 2*np.random.rand(len(exc_voiced)) - 1

    exc = np.zeros(len(exc_voiced))

    for i in range(5):
        h = h_filters[i]
        x_v = lfilter(h, 1, exc_voiced)
        x_uv = lfilter(h, 1, exc_unvoiced)

        gain_v = np.zeros(len(exc_voiced))
        gain_uv = np.zeros(len(exc_voiced))

        str_v = voicing_str[:, i]
        for k in range(len(str_v)):
          if f0[k] > 0:
              gain_v[k*hopsize:(k+1)*hopsize] = str_v[k]
              gain_uv[k*hopsize:(k+1)*hopsize] = 1.0 - str_v[k]
          else:
              gain_v[k*hopsize:(k+1)*hopsize] = 0.0
              gain_uv[k*hopsize:(k+1)*hopsize] = 1.0

        exc += (gain_v * x_v + gain_uv * x_uv)

    return exc

if __name__ == '__main__':

    from scipy.io import wavfile
    import sys, os

    os.environ['PATH'] = '/Users/jfsantos/Development/SPTK/bin/:' + os.environ['PATH']

    fs, x = wavfile.read(sys.argv[1])
    mgc, f0, voicing_str = wav2mgcf0(x)

    x_synth = mgcf02wav(mgc, f0, voicing_str)

    # get valid range (last few samples are going to be crazy)
    x_synth = x_synth[np.abs(x_synth) <= 2**15]

    # Normalize x_synth by its maximum to avoid clipping
    x_synth = x_synth/max(abs(x_synth)) * 2**15

    wavfile.write('test_mgcf02wav_mixed.wav', 16000, x_synth.astype('int16'))


